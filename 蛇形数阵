int n,flag=1,counter=0,temp;
    cin >>n;
    int m=1,flag1=0;
    int **p=new int*[n];
    for (int i=0; i<n; i++) {
        p[i]=new int[n];
    }
    m=1;
    while (flag1<n) {
        int i=flag1,j=0;
        while (j<=flag1) {
                if (flag==1) {
                    p[i][j]=m;
                    m++;
                    i--;
                    j++;
                }
                else{
                    p[j][i]=m;
                    m++;
                    i--;
                    j++;
                }
            }
        if (flag==0){
            flag=1;}
        else{
            flag=0;}
        flag1++;
    }
    int flag2=n-1,flag3=n;
    flag1=n-1;
    while (flag3<=(2*n-2)) {
        int j=n-1,i=flag3-j;
        counter=1;
        while (counter<=flag2) {
            if (flag==0) {
                p[i][j]=m;
                m++;
                i++;
                j--;
                counter++;
            }
            else{
                p[j][i]=m;
                m++;
                i++;
                j--;
                counter++;
            }
        }
        if (flag==0){
            flag=1;}
        else{
            flag=0;}
        flag2--;
        flag1++;
        flag3++;
    }
    for (int i=0; i<(n); i++) {
        for (int j=0; j<(n/2); j++) {
            temp=p[i][j];
            p[i][j]=p[i][n-1-j];
            p[i][n-1-j]=temp;
        }
    }
    int i,j;
    for (i=0; i<n; i++) {
        for (j=0; j<n-1; j++) {
            cout<< p[i][j] << " ";
        }
        cout<<p[i][j]<<endl;
    }
    
    
    for (int i=0; i<n; i++) {
        delete [] p[i];
    }
    
    
    delete [] p;
